generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model AboutContent {
  id                       String   @id @map("_id")
  carouselSlides           String
  collaborationDisplayMode String
  collaborationSubtitle    String
  collaborationTitle       String
  description1             String
  description2             String
  isActive                 Boolean
  mainTitle                String
  membersCount             String
  missionCount             String
  partnersCount            String
  primaryButtonLink        String
  primaryButtonText        String
  projectsCount            String
  secondaryButtonLink      String
  secondaryButtonText      String
  subtitle                 String
  title                    String
  updatedAt                DateTime @db.Date
  value1Desc               String
  value1Icon               String
  value1Title              String
  value2Desc               String
  value2Icon               String
  value2Title              String
  value3Desc               String
  value3Icon               String
  value3Title              String
}

model Application {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  adminNotes     String?
  applicantEmail String
  applicantName  String
  applicantPhone String
  /// Could not determine type: the field only had null or empty values in the sample set.
  feedback       Json?
  formId         String
  id_            String   @map("id")
  ipAddress      String
  priority       String
  reviewedAt     BigInt?
  reviewedBy     String?
  status         String
  submittedAt    DateTime @db.Date
  updatedAt      DateTime @db.Date
  userAgent      String
}

model ApplicationResponse {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  applicationId   String
  /// Could not determine type: the field only had null or empty values in the sample set.
  booleanValue    Json?
  createdAt       BigInt
  /// Could not determine type: the field only had null or empty values in the sample set.
  dateValue       Json?
  fileUrl         String?
  id_             String  @map("id")
  /// Could not determine type: the field only had null or empty values in the sample set.
  numberValue     Json?
  questionId      String
  selectedOptions String?
  textValue       String?
  updatedAt       BigInt
}

model Event {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  capacity             Int?
  createdAt            BigInt
  createdBy            String
  description          String
  endDate              BigInt
  eventDate            DateTime @db.Date
  eventType            String
  featured             Int
  id_                  String   @map("id")
  imageUrl             String?
  isMainEvent          Int
  location             String
  /// Could not determine type: the field only had null or empty values in the sample set.
  parentEventId        Json?
  published            Boolean
  registrationCtaLabel String
  registrationEnabled  Int
  /// Could not determine type: the field only had null or empty values in the sample set.
  registrationUrl      Json?
  title                String
  updatedAt            BigInt
  venue                String?
}

model Form {
  id                     String    @id @default(auto()) @map("_id") @db.ObjectId
  allowMultiple          Int
  /// Could not determine type: the field only had null or empty values in the sample set.
  attendanceLatitude     Json?
  /// Could not determine type: the field only had null or empty values in the sample set.
  attendanceLongitude    Json?
  /// Could not determine type: the field only had null or empty values in the sample set.
  attendanceRadiusMeters Json?
  backgroundColor        String
  category               String
  createdAt              BigInt
  createdBy              String
  deadline               DateTime? @db.Date
  description            String
  id_                    String    @map("id")
  isActive               Boolean
  isAttendanceForm       Int
  isPublic               Int
  /// Could not determine type: the field only had null or empty values in the sample set.
  maxSubmissions         Json?
  notificationEmail      String
  notifyOnSubmission     Int
  requireAuth            Int
  slug                   String
  textColor              String
  title                  String
  updatedAt              BigInt
}

model FormDraft {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  applicantEmail String
  applicantName  String
  applicantPhone String
  createdAt      BigInt
  formId         String
  id_            String @map("id")
  responses      String
  updatedAt      BigInt
  userId         String
}

model FormQuestion {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   BigInt
  description String
  formId      String
  id_         String  @map("id")
  /// Could not determine type: the field only had null or empty values in the sample set.
  maxLength   Json?
  /// Could not determine type: the field only had null or empty values in the sample set.
  minLength   Json?
  options     String?
  order       Int
  /// Could not determine type: the field only had null or empty values in the sample set.
  pattern     Json?
  required    Int
  title       String
  type        String
  updatedAt   BigInt
}

model HeroContent {
  id                  String   @id @map("_id")
  description         String
  isActive            Boolean
  mainTitle           String
  primaryButtonLink   String
  primaryButtonText   String
  secondaryButtonLink String
  secondaryButtonText String
  subTitle            String
  thirdTitle          String
  updatedAt           DateTime @db.Date
}

model TeamMember {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  active    Boolean
  bio       String
  createdAt BigInt
  email     String?
  featured  Boolean
  github    String?
  id_       String   @map("id")
  imageUrl  String
  joinDate  DateTime @db.Date
  /// Could not determine type: the field only had null or empty values in the sample set.
  leaveDate Json?
  linkedIn  String?
  major     String
  name      String
  role      String
  sortOrder Int
  updatedAt BigInt
  year      String
}

model User {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     BigInt
  email         String
  /// Could not determine type: the field only had null or empty values in the sample set.
  emailVerified Json?
  id_           String  @map("id")
  image         String?
  name          String
  role          String
  updatedAt     BigInt
}

model joinContent {
  id                 String   @id @map("_id")
  contactEmail1      String
  contactEmail2      String
  contactEmail3      String
  contactTitle       String
  isActive           Boolean
  option1Benefits    String
  option1CTA         String
  option1Description String
  option1Link        String
  option1Title       String
  option2Benefits    String
  option2CTA         String
  option2Description String
  option2Link        String
  option2Title       String
  option3Benefits    String
  option3CTA         String
  option3Description String
  option3Link        String
  option3Title       String
  subtitle           String
  title              String
  updatedAt          DateTime @db.Date
}

model Project {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  status       String    // ACTIVE, COMPLETED, PLANNING, PAUSED
  startDate    DateTime  @db.Date
  endDate      DateTime? @db.Date
  budget       String?
  progress     Int       @default(0)
  objectives   String
  outcomes     String?
  technologies String
  links        String?
  imageUrl     String?
  featured     Boolean   @default(false)
  published    Boolean   @default(true)
  createdBy    String
  createdAt    BigInt
  updatedAt    BigInt
  
  teamMembers  ProjectTeamMember[]
  partnerships ProjectPartnership[]
  funding      ProjectFunding[]
}

model ProjectTeamMember {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  projectId String  @db.ObjectId
  name      String
  role      String
  year      String
  email     String?
  linkedIn  String?
  createdAt BigInt
  updatedAt BigInt
  
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Company {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String
  logoUrl      String?
  website      String?
  industry     String?
  size         String?
  location     String?
  contactEmail String?
  createdAt    BigInt
  updatedAt    BigInt
  
  partnerships ProjectPartnership[]
}

model ProjectPartnership {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  projectId   String  @db.ObjectId
  companyId   String  @db.ObjectId
  type        String  // SPONSOR, PARTNER, CLIENT
  description String?
  createdAt   BigInt
  updatedAt   BigInt
  
  project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  company     Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
}

model ProjectFunding {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  projectId   String  @db.ObjectId
  source      String  // GRANT, SPONSOR, INTERNAL, COMPETITION
  amount      String
  description String?
  receivedAt  DateTime @db.Date
  createdAt   BigInt
  updatedAt   BigInt
  
  project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}
